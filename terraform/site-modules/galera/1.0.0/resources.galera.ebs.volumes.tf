
locals {
  ##  MYSQL DIRECTORIES
  mount_point_mysql_binlog  = "${var.env_strings["ebs_vol_mount_root"]}/mysql/log"
  mount_point_mysql_tmp     = "${var.env_strings["ebs_vol_mount_root"]}/mysql/tmp"
}
output "mount_point_mysql_binlog" { value = "${local.mount_point_mysql_binlog}" }
output "mount_point_mysql_tmp"    { value = "${local.mount_point_mysql_tmp}" }

resource "aws_kms_key" "galera-ebs-volumes" {
  description   = "${local.org-env-name}-galera-ebs-volumes"
  tags          = "${ merge( var.tags, map( "Name", "${local.org-env-name}-galera-ebs-volumes")) }"
}

module "galera_ebs_vols_az0" {
  source                = "./ebs-vols-per-az"
  name                  = "${var.name}"
  instance_count        = "${var.instance_count_az0}"
  instance_ids          = "${module.cluster.az_0_instance_ids}"
  kms_key_arn           = "${aws_kms_key.galera-ebs-volumes.arn}"
  az                    = "${element(var.vpc_lists["availability_zones"],0)}"
  env_strings           = "${var.env_strings}"
  tags                  = "${var.tags}"
  ##  VOLUME 1 IS THE MYSQL BINLOG DIR
  volume_1_size         = "${var.mysql-binlog-vol-size}"
  volume_1_type         = "${var.mysql-binlog-vol-type}"
  volume_1_iops         = "${var.mysql-binlog-vol-iops}"
  volume_1_device_id    = "/dev/sdh"
  volume_1_encrypted    = "true"
  volume_1_vol_name     = "mysql-binlog"
  volume_1_vol_label    = "mysql-binlog"
  volume_1_mount_point  = "${local.mount_point_mysql_binlog}"
  volume_1_fs           = "xfs"
  ##  VOLUME 2 IS THE MYSQL TMP DIR
  volume_2_size         = "${var.mysql-tmp-vol-size}"
  volume_2_type         = "${var.mysql-tmp-vol-type}"
  volume_2_iops         = "${var.mysql-tmp-vol-iops}"
  volume_2_device_id    = "/dev/sdi"
  volume_2_encrypted    = "true"
  volume_2_vol_name     = "mysql-tmp"
  volume_2_vol_label    = "mysql-tmp"
  volume_2_mount_point  = "${local.mount_point_mysql_tmp}"
  volume_2_fs           = "xfs"
}

module "galera_ebs_vols_az1" {
  source                = "./ebs-vols-per-az"
  name                  = "${var.name}"
  instance_count        = "${var.instance_count_az1}"
  instance_ids          = "${module.cluster.az_1_instance_ids}"
  kms_key_arn           = "${aws_kms_key.galera-ebs-volumes.arn}"
  az                    = "${element(var.vpc_lists["availability_zones"],1)}"
  env_strings           = "${var.env_strings}"
  tags                  = "${var.tags}"
  volume_1_size         = "${var.mysql-binlog-vol-size}"
  volume_1_type         = "${var.mysql-binlog-vol-type}"
  volume_1_iops         = "${var.mysql-binlog-vol-iops}"
  volume_1_device_id    = "/dev/sdh"
  volume_1_encrypted    = "true"
  volume_1_vol_name     = "mysql-binlog"
  volume_1_vol_label    = "mysql-binlog"
  volume_1_mount_point  = "${local.mount_point_mysql_binlog}"
  volume_1_fs           = "xfs"
  volume_2_size         = "${var.mysql-tmp-vol-size}"
  volume_2_type         = "${var.mysql-tmp-vol-type}"
  volume_2_iops         = "${var.mysql-tmp-vol-iops}"
  volume_2_device_id    = "/dev/sdi"
  volume_2_encrypted    = "true"
  volume_2_vol_name     = "mysql-tmp"
  volume_2_vol_label    = "mysql-tmp"
  volume_2_mount_point  = "${local.mount_point_mysql_tmp}"
  volume_2_fs           = "xfs"
}
module "galera_ebs_vols_az2" {
  source                = "./ebs-vols-per-az"
  name                  = "${var.name}"
  instance_count        = "${var.instance_count_az2}"
  instance_ids          = "${module.cluster.az_2_instance_ids}"
  kms_key_arn           = "${aws_kms_key.galera-ebs-volumes.arn}"
  az                    = "${element(var.vpc_lists["availability_zones"],2)}"
  env_strings           = "${var.env_strings}"
  tags                  = "${var.tags}"
  volume_1_size         = "${var.mysql-binlog-vol-size}"
  volume_1_type         = "${var.mysql-binlog-vol-type}"
  volume_1_iops         = "${var.mysql-binlog-vol-iops}"
  volume_1_device_id    = "/dev/sdh"
  volume_1_encrypted    = "true"
  volume_1_vol_name     = "mysql-binlog"
  volume_1_vol_label    = "mysql-binlog"
  volume_1_mount_point  = "${local.mount_point_mysql_binlog}"
  volume_1_fs           = "xfs"
  volume_2_size         = "${var.mysql-tmp-vol-size}"
  volume_2_type         = "${var.mysql-tmp-vol-type}"
  volume_2_iops         = "${var.mysql-tmp-vol-iops}"
  volume_2_device_id    = "/dev/sdi"
  volume_2_encrypted    = "true"
  volume_2_vol_name     = "mysql-tmp"
  volume_2_vol_label    = "mysql-tmp"
  volume_2_mount_point  = "${local.mount_point_mysql_tmp}"
  volume_2_fs           = "xfs"
}
